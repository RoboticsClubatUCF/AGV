<?xml version="1.0"?>
<!--
  Gazebo ROS state plugin demo
  Try for example to get a model's state w.r.t. the world:
      ros2 service call /demo/get_entity_state 'gazebo_msgs/GetEntityState' '{name: "boxes"}'
  Or a link's state w.r.t. the world:
      ros2 service call /demo/get_entity_state 'gazebo_msgs/GetEntityState' '{name: "boxes::bottom", reference_frame: "world"}'
  Or a light's state w.r.t. another entity:
      ros2 service call /demo/get_entity_state 'gazebo_msgs/GetEntityState' '{name: "sun", reference_frame: "ground_plane"}'
  > When setting state, note that the changes for static entities may not be visible on gzclient due to https://bitbucket.org/osrf/gazebo/issues/2560
  Try teleporting a model:
      ros2 service call /demo/set_entity_state 'gazebo_msgs/SetEntityState' '{state: {name: "boxes", pose: {position: {y: 2}}}}'
  Or rotating a light:
      ros2 service call /demo/set_entity_state 'gazebo_msgs/SetEntityState' '{state: {name: "sun", pose: {position: {z: 10}, orientation: {x: 0.1, y: 0.2, z: 0.3, w: 0.5}}}}'
  Try teleporting a model:
      ros2 service call /demo/set_entity_state 'gazebo_msgs/SetEntityState' '{state: {name: "boxes::top", reference_frame: "boxes::top", twist: {angular: {x: 2}}}}'
  Try listening to model states:
      ros2 topic echo /demo/model_states_demo
  Try listening to link states:
      ros2 topic echo /demo/link_states_demo
-->
<sdf version="1.6">
  <world name="default">

    <include>
      <uri>model://ground_plane</uri>
    </include>
    <include>
      <uri>model://sun</uri>
    </include>

    <!-- <model:physical name="terrain_model">
      <body:heightmap name ="terrain_body">
        <geom:heightmap name="terrain_geom">
          <image>terrain.png</image>
          <worldTexture>test.jpg</worldTexture>
          <detailTexture>ttest.jpg</detailTexture>
          <size>10 10 1</size>
        </geom:heightmap>
      </body:heightmap>
    </model:physical> -->

    <include>
      <uri>model://bowser2</uri>
    </include>

  </world>
</sdf>