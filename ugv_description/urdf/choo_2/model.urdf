<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from model.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="choo_2">
  <!--
        This file contains Gazebo-specific information:
            * simulation plugins
            * physical constants used by Gazebo (but not by ROS)
    -->
  <gazebo reference="back_left_caster">
    <!-- force caster to be frictionless
             by default, mu is 1.0 (max friction) -->
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="back_right_caster">
    <!-- force caster to be frictionless
             by default, mu is 1.0 (max friction) -->
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <gazebo reference="back_left_caster_joint">
    <!--
            We need to use the preserveFixedJoint tag to stop Gazebo smushing every fixed joint into base_link (default behavior)
        -->
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo reference="back_right_caster_joint">
    <preserveFixedJoint>true</preserveFixedJoint>
  </gazebo>
  <gazebo>
    <!-- differential drive plugin; publishes odom frame-->
    <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive_controller">
      <robotNamespace/>
      <rosDebugLevel>debug</rosDebugLevel>
      <!-- 'physical' characteristics -->
      <leftJoint>front_left_wheel_joint</leftJoint>
      <rightJoint>front_right_wheel_joint</rightJoint>
      <wheelSeparation>0.67</wheelSeparation>
      <wheelDiameter>0.2159</wheelDiameter>
      <wheelTorque>4</wheelTorque>
      <!-- in Nm -->
      <!-- plugin characteristics -->
      <odometrySource>world</odometrySource>
      <publishOdom>true</publishOdom>
      <updateRate>100</updateRate>
      <!-- tf -->
      <publishTf>true</publishTf>
      <!-- publish the transforms -->
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <odometryFrame>/odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <!-- ros messaging -->
      <commandTopic>/cmd_vel</commandTopic>
      <!-- listens to -->
      <odometryTopic>/odom</odometryTopic>
      <!-- publishes on -->
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>true</legacyMode>
    </plugin>
  </gazebo>
  <!-- stereo camera simulation plugin -->
  <gazebo reference="camera">
    <sensor name="depth_sensor" type="depth">
      <!-- Set always_on only for sensor, not on plugin -->
      <always_on>0</always_on>
      <!-- Set update_rate only for sensor, not on plugin -->
      <updateRate>10</updateRate>
      <camera name="depth_camera">
        <horizontal_fov>1.2</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>5</far>
        </clip>
        <!-- no distortions: "ideal" camera -->
        <distortion>
          <k1>0.0</k1>
          <k2>0.0</k2>
          <k3>0.0</k3>
          <p1>0.0</p1>
          <p2>0.0</p2>
          <center>0.0 0.0</center>
        </distortion>
      </camera>
      <visualize>true</visualize>
      <plugin filename="libgazebo_ros_depth_camera.so" name="depth_cam_plugin">
        <robotNamespace>choo_2</robotNamespace>
        <always_on>true</always_on>
        <updateRate>0.0</updateRate>
        <!-- use sensor rate -->
        <cameraName>depth_cam</cameraName>
        <baseline>0.05</baseline>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>5</pointCloudCutoffMax>
        <!-- configure output topics; will be prepended with robotNamespace value (AKA relative names) -->
        <imageTopicName>image/image</imageTopicName>
        <cameraInfoTopicName>image/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
        <frameName>/camera_depth_link</frameName>
        <!-- namespaced -->
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- GPS simulation plugin -->
  <gazebo>
    <!-- can't put a 'reference' on this or the GPS doesn't work. hmmmmm... -->
    <!-- http://wiki.ros.org/hector_gazebo_plugins#GazeboRosGps -->
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <robotNamespace>choo_2</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <rosDebugLevel>debug</rosDebugLevel>
      <updateRate>1.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>fix</topicName>
      <!-- output topic-->
      <velocityTopicName>fix_velocity</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
      <frameId>map</frameId>
      <!-- references -->
      <!-- <referenceLatitude></referenceLatitude>
            <referenceLongitude></referenceLongitude>
            <referenceHeading></referenceHeading>
            <referenceAltitude></referenceAltitude> -->
    </plugin>
  </gazebo>
  <!-- imu simulation plugin -->
  <gazebo>
    <!-- can't use reference because gazebo squashes fixed joints + links into base_link -->
    <plugin filename="libgazebo_ros_imu.so" name="imu_plugin">
      <robotNamespace>choo_2</robotNamespace>
      <alwaysOn>true</alwaysOn>
      <bodyName>imu</bodyName>
      <topicName>imu</topicName>
      <frameName>imu</frameName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>50.0</updateRate>
    </plugin>
  </gazebo>
  <!-- lidar simulation plugin -->
  <gazebo reference="lidar">
    <sensor name="laser_sensor" type="ray">
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2618</min_angle>
            <max_angle>0.2618</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.9</min>
          <max>130</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="laser_plugin">
        <robotNamespace>choo_2</robotNamespace>
        <topicName>velodyne</topicName>
        <frameName>/lidar</frameName>
        <organize_cloud>false</organize_cloud>
        <min_range>0.9</min_range>
        <max_range>130</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <!-- skid steer plugin -->
  <!-- <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace>${robot}</robotNamespace>
            <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
            <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
            <leftRearJoint>back_left_wheel_joint</leftRearJoint>
            <rightRearJoint>back_right_wheel_joint</rightRearJoint>
            <wheelSeparation>${track_width}</wheelSeparation>
            <wheelDiameter>${wheel_radius * 2}</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <torque>100</torque>

            <commandTopic>/cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>/odom</odometryFrame>
            <broadcastTF>false</broadcastTF>
        </plugin>
    </gazebo> -->
  <!--
        This file contains xacro macros used to clean up our main URDF file.
    -->
  <!-- 
        objects contained within the gazebo tags are for Gazebo simulation use only, ignored otherwise.
        They use SDF format, rather than URDF format
    -->
  <gazebo>
    <static>false</static>
  </gazebo>
  <link name="base_link">
    <gazebo reference="base_link">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="base_link_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.9398 0.5588 0.305"/>
      </geometry>
    </collision>
    <visual name="base_link_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.9398 0.5588 0.305"/>
      </geometry>
    </visual>
    <inertial name="base_link_inertial">
      <mass value="45.36"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="3.6902213712" ixy="0.0" ixz="0.0" iyy="1.5319676231999997" iyz="0.0" izz="4.5189199944"/>
    </inertial>
  </link>
  <link name="front_left_wheel">
    <gazebo reference="front_left_wheel">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>0</mu2>
            <fdir1>0 1.0 0</fdir1>
            <implicit_spring_damper>true</implicit_spring_damper>
          </ode>
        </friction>
      </surface>
    </gazebo>
    <collision name="front_left_wheel_collision">
      <origin rpy="-1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.059" radius="0.10795"/>
      </geometry>
    </collision>
    <visual name="front_left_wheel_visual">
      <origin rpy="-1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.059" radius="0.10795"/>
      </geometry>
    </visual>
    <inertial name="front_left_wheel">
      <mass value="1.179"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.0037767896868750005" ixy="0.0" ixz="0.0" iyy="0.0037767896868750005" iyz="0.0" izz="0.006869562873750001"/>
    </inertial>
  </link>
  <joint name="front_left_wheel_joint" type="continuous">
    <gazebo reference="front_left_wheel_joint">
            </gazebo>
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <origin xyz="0.335 0.335 -0.186475"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="front_right_wheel">
    <gazebo reference="front_right_wheel">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>0</mu2>
            <fdir1>0 1.0 0</fdir1>
            <implicit_spring_damper>true</implicit_spring_damper>
          </ode>
        </friction>
      </surface>
    </gazebo>
    <collision name="front_right_wheel_collision">
      <origin rpy="-1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.059" radius="0.10795"/>
      </geometry>
    </collision>
    <visual name="front_right_wheel_visual">
      <origin rpy="-1.5707 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.059" radius="0.10795"/>
      </geometry>
    </visual>
    <inertial name="front_right_wheel">
      <mass value="1.179"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.0037767896868750005" ixy="0.0" ixz="0.0" iyy="0.0037767896868750005" iyz="0.0" izz="0.006869562873750001"/>
    </inertial>
  </link>
  <joint name="front_right_wheel_joint" type="continuous">
    <gazebo reference="front_right_wheel_joint">
            </gazebo>
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <origin xyz="0.335 -0.335 -0.186475"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- back right wheel-->
  <!-- <xacro:wheel name="back_right_wheel" wheel_radius="${wheel_radius}" wheel_width="${wheel_width}" wheel_mass="${wheel_mass}"/>
    <xacro:wheel_joint name="back_right_wheel" x_offset="${wheel_offset_x}" y_offset="${wheel_offset_y}" z_offset="${wheel_offset_z}" reflect_x="-1" reflect_y="-1"/> -->
  <link name="back_left_caster">
    <gazebo reference="back_left_caster">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="back_left_caster_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.10795"/>
      </geometry>
    </collision>
    <visual name="back_left_caster_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.10795"/>
      </geometry>
    </visual>
    <inertial name="back_left_caster_inertial">
      <mass value="1.179"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.0054956502990000005" ixy="0.0" ixz="0.0" iyy="0.0054956502990000005" iyz="0.0" izz="0.0054956502990000005"/>
    </inertial>
  </link>
  <joint name="back_left_caster_joint" type="fixed">
    <gazebo reference="back_left_caster_joint">
            </gazebo>
    <parent link="base_link"/>
    <child link="back_left_caster"/>
    <origin xyz="-0.1675 0.1675 -0.186475"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="back_right_caster">
    <gazebo reference="back_right_caster">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="back_right_caster_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.10795"/>
      </geometry>
    </collision>
    <visual name="back_right_caster_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.10795"/>
      </geometry>
    </visual>
    <inertial name="back_right_caster_inertial">
      <mass value="1.179"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.0054956502990000005" ixy="0.0" ixz="0.0" iyy="0.0054956502990000005" iyz="0.0" izz="0.0054956502990000005"/>
    </inertial>
  </link>
  <joint name="back_right_caster_joint" type="fixed">
    <gazebo reference="back_right_caster_joint">
            </gazebo>
    <parent link="base_link"/>
    <child link="back_right_caster"/>
    <origin xyz="-0.1675 -0.1675 -0.186475"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="lidar_stalk">
    <gazebo reference="lidar_stalk">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="lidar_stalk_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.33"/>
      </geometry>
    </collision>
    <visual name="lidar_stalk_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.33"/>
      </geometry>
    </visual>
    <inertial name="lidar_stalk_inertial">
      <mass value="0.14982"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.0013646105000000002" ixy="0.0" ixz="0.0" iyy="0.0013646105000000002" iyz="0.0" izz="9.988000000000002e-06"/>
    </inertial>
  </link>
  <joint name="lidar_stalk_joint" type="fixed">
    <gazebo reference="lidar_stalk_joint">
        </gazebo>
    <parent link="base_link"/>
    <child link="lidar_stalk"/>
    <origin rpy="0 0 0" xyz="-0.1311 0.0 0.305"/>
  </joint>
  <!-- lidar link -->
  <link name="lidar">
    <gazebo reference="lidar">
        </gazebo>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </visual>
    <inertial name="lidar">
      <mass value="0.83"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="0.000908059425" ixy="0.0" ixz="0.0" iyy="0.000908059425" iyz="0.0" izz="0.0011049624"/>
    </inertial>
  </link>
  <joint name="lidar_joint" type="fixed">
    <gazebo reference="lidar_joint">
        </gazebo>
    <parent link="lidar_stalk"/>
    <child link="lidar"/>
    <origin xyz="0 0 0.165"/>
  </joint>
  <link name="imu">
    <gazebo reference="imu">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="imu_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    <visual name="imu_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <inertial name="imu_inertial">
      <mass value="0.05"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="2.083333333333334e-05" ixy="0.0" ixz="0.0" iyy="2.083333333333334e-05" iyz="0.0" izz="2.083333333333334e-05"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <gazebo reference="imu_joint">
        </gazebo>
    <parent link="base_link"/>
    <child link="imu"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
  </joint>
  <link name="camera">
    <gazebo reference="camera">
      <material>Gazebo/Black</material>
      <gravity>true</gravity>
    </gazebo>
    <collision name="camera_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.03"/>
      </geometry>
    </collision>
    <visual name="camera_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.03"/>
      </geometry>
    </visual>
    <inertial name="camera_inertial">
      <mass value="0.17"/>
      <!-- 3D inertia tensor from: https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
      <inertia ixx="2.8177500000000006e-05" ixy="0.0" ixz="0.0" iyy="0.0004466041666666667" iyz="0.0" izz="0.0004492816666666667"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera"/>
    <origin rpy="0 0 0" xyz="0.4699 0.0 0.1825"/>
  </joint>
  <!-- a simulation workaround to fix the broken point cloud orientation -->
  <!-- https://answers.ros.org/question/218395/libgazebo_ros_openni_kinectso-depth-pointcloud-wrong-tf/?answer=218749#post-id-218749 -->
  <joint name="camera_depth_joint" type="fixed">
    <parent link="camera"/>
    <child link="camera_depth_link"/>
    <origin rpy="-1.5708 0 -1.5708" xyz="0.0  0.0  0.0"/>
  </joint>
  <link name="camera_depth_link"/>
</robot>

